import SwiftUI
import SwiftData

// View for the saved articles to be displayed, and deleted if wanted

struct ArticlesView: View {
    @Environment(\.modelContext) private var modelContext  // Access to SwiftData, in regards to deleting from the database
    @Query private var favouriteArticles: [FavouriteArticle]  // Fetch saved articles from FavouriteArticle-database
    
    var body: some View {
        VStack { // If no artiles are saved in database, display NoSavedArticlesView (see code below)
            if favouriteArticles.count < 1 {
                NoSavedArticlesView()
            } else {
                List {
                    // Loop through saved articles and display them in a Vstack
                    ForEach(favouriteArticles) { article in
                        NavigationLink(destination: SavedArticlesView(article: article)) {
                            VStack(alignment: .leading) {
                                Text(article.title)
                                    .font(.headline)
                                Text(article.articleDescription ?? "No description")
                                    .font(.subheadline)
                                    .foregroundColor(.gray)
                            }
                            .padding()
                        }
                        // Swipe to delete from database and view
                        .swipeActions {
                            Button(role: .destructive) {
                                deleteArticle(article)
                            } label: {
                                Label("Delete", systemImage: "trash")
                            }
                        }
                    }
                }
            }
        }
        .navigationTitle("Saved Articles") // Title for view
    }
    
    // Function to delete an article from the database
    private func deleteArticle(_ article: FavouriteArticle) {
        modelContext.delete(article) // Delete article
        do {
            try modelContext.save() // Save and update database
        } catch {
            print("Error deleting article: \(error)")
        }
    }
}

#Preview {
    ArticlesView()
}

// Separate view if empty FavouriteArticle-database
// Display an owl looking confused, looking for more news
// Image generated by AI, can be found in Assets (name: owlEmpty)
struct NoSavedArticlesView: View {
    var body: some View {
        VStack{
            Image("owlEmpty")
                .resizable()
                .frame(width: 250, height: 250)
            VStack(alignment: .center){
                Text("No articles are saved")
                    .fontWeight(.bold)
                    .font(.title2)
                Text("Please go to search and fetch articles and news from the internet")
            }
            .padding()
        }
    }
}
