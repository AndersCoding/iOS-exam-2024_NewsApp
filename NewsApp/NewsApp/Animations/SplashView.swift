import SwiftUI

struct SplashView: View {
    @State private var owlPosition = CGSize(width: -350, height: 0) // Starting position for image of owlNews
    @State private var navigateToContent = false // Used to trigger navigation
    
    var body: some View {
        NavigationStack {
            ZStack {
                Color.black
                    .ignoresSafeArea() // Whole background is black, including camerabox
                
                Image("owlNews")  // owlNews, from Assets, image generated by AI
                    .resizable()
                    .scaledToFit()
                    .frame(width: 250, height: 250)
                    .offset(owlPosition)
                    .onAppear {
                        // Start the animation when starting app
                        startAnimation()
                    }
                
                // Using navigationDestination instead of NavigationLink, since deprecated for iOS 16
            }
            .navigationBarBackButtonHidden(true) // Disable the back button on View
            .navigationDestination(isPresented: $navigateToContent) {
                ContentView() // Navigate to ContentView when navigateToContent becomes true
            }
        }
    }
    
    func startAnimation() { // Function  for starting animation
        owlPosition = CGSize(width: -350, height: 0) // Start off the left
        
        // Owl starts at left side
        withAnimation(.easeIn(duration: 1)) {
            owlPosition = CGSize(width: 0, height: 0) // Owl moves to center of screen
        }
        
        // Stop for 1 second
        withAnimation(.easeOut(duration: 1).delay(1)) {
            owlPosition = CGSize(width: 0, height: 0) // Hover a bit - not working
        }
        
        // Owl moves to the right
        withAnimation(.easeIn(duration: 1).delay(2)) {
            owlPosition = CGSize(width: 350, height: 0)
        }
        
        // After 3 seconds (end of animation), navigate to ContentView
        DispatchQueue.main.asyncAfter(deadline: .now() + 3) {
            navigateToContent = true // Trigger navigation to ContentView, after three (3) seconds
        }
    }
}

#Preview {
    SplashView()
}
